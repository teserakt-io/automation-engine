// Code generated by MockGen. DO NOT EDIT.
// Source: gitlab.com/teserakt/c2se/internal/engine (interfaces: RuleWatcher)

// Package mocks is a generated GoMock package.
package mocks

import (
	gomock "github.com/golang/mock/gomock"
	reflect "reflect"
)

// MockRuleWatcher is a mock of RuleWatcher interface
type MockRuleWatcher struct {
	ctrl     *gomock.Controller
	recorder *MockRuleWatcherMockRecorder
}

// MockRuleWatcherMockRecorder is the mock recorder for MockRuleWatcher
type MockRuleWatcherMockRecorder struct {
	mock *MockRuleWatcher
}

// NewMockRuleWatcher creates a new mock instance
func NewMockRuleWatcher(ctrl *gomock.Controller) *MockRuleWatcher {
	mock := &MockRuleWatcher{ctrl: ctrl}
	mock.recorder = &MockRuleWatcherMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockRuleWatcher) EXPECT() *MockRuleWatcherMockRecorder {
	return m.recorder
}

// Reload mocks base method
func (m *MockRuleWatcher) Reload() error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Reload")
	ret0, _ := ret[0].(error)
	return ret0
}

// Reload indicates an expected call of Reload
func (mr *MockRuleWatcherMockRecorder) Reload() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Reload", reflect.TypeOf((*MockRuleWatcher)(nil).Reload))
}
