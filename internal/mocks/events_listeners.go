// Code generated by MockGen. DO NOT EDIT.
// Source: gitlab.com/teserakt/c2se/internal/events (interfaces: TriggerListenerFactory)

// Package mocks is a generated GoMock package.
package mocks

import (
	gomock "github.com/golang/mock/gomock"
	events "gitlab.com/teserakt/c2se/internal/events"
	models "gitlab.com/teserakt/c2se/internal/models"
	reflect "reflect"
)

// MockTriggerListenerFactory is a mock of TriggerListenerFactory interface
type MockTriggerListenerFactory struct {
	ctrl     *gomock.Controller
	recorder *MockTriggerListenerFactoryMockRecorder
}

// MockTriggerListenerFactoryMockRecorder is the mock recorder for MockTriggerListenerFactory
type MockTriggerListenerFactoryMockRecorder struct {
	mock *MockTriggerListenerFactory
}

// NewMockTriggerListenerFactory creates a new mock instance
func NewMockTriggerListenerFactory(ctrl *gomock.Controller) *MockTriggerListenerFactory {
	mock := &MockTriggerListenerFactory{ctrl: ctrl}
	mock.recorder = &MockTriggerListenerFactoryMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockTriggerListenerFactory) EXPECT() *MockTriggerListenerFactoryMockRecorder {
	return m.recorder
}

// Create mocks base method
func (m *MockTriggerListenerFactory) Create(arg0 models.Trigger) (events.Type, events.Listener, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Create", arg0)
	ret0, _ := ret[0].(events.Type)
	ret1, _ := ret[1].(events.Listener)
	ret2, _ := ret[2].(error)
	return ret0, ret1, ret2
}

// Create indicates an expected call of Create
func (mr *MockTriggerListenerFactoryMockRecorder) Create(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Create", reflect.TypeOf((*MockTriggerListenerFactory)(nil).Create), arg0)
}
