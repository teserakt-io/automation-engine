image: golang:1.12

stages:
  - test
  - build

before_script:
  # Packages
  - PACKAGES="openssh-client git bash"
  - command -v apt >/dev/null 2>&1 && (apt-get update && apt-get install -y ${PACKAGES}) || (apk update && apk add ${PACKAGES})

  # https://docs.gitlab.com/ee/ci/ssh_keys/
  - echo "Configuring git"
  - eval $(ssh-agent -s)
  - echo "$SSH_CI_KEY" | tr -d '\r' | ssh-add - > /dev/null
  - mkdir -p ~/.ssh && chmod 600 ~/.ssh
  - echo "gitlab.com,35.231.145.151 ecdsa-sha2-nistp256 AAAAE2VjZHNhLXNoYTItbmlzdHAyNTYAAAAIbmlzdHAyNTYAAABBBFSMqzJeV9rUzU4kWitGjeR4PWSa29SPqJ1fVkhtj3Hw9xjLVXVYrU9QlYWrOLXBpQ6KWjbjTDTdDkoohFzgbEY=" >> ~/.ssh/known_hosts

  # Force use of ssh urls instead of https for gitlab.com. Has to be done before any go get...
  - git config --global url."git@gitlab.com:".insteadOf "https://gitlab.com/"

test:
  stage: test
  script:
    # Install global go tools
    - go install golang.org/x/lint/golint
    - go get github.com/jstemmer/go-junit-report
    # Run lint and tests
    - golint -set_exit_status ./...
    - go test -v -coverprofile=cover.out -timeout 10s -race ./... | tee >(go-junit-report > report.xml)
    - go tool cover -func cover.out
  coverage: '/^total:\t+\(statements\)\t+(\d+\.\d+)%/'
  artifacts:
    reports:
      junit:
        - report.xml
    expire_in: 1 week

build:
  stage: build
  script:
    - ./scripts/build.sh
  # artifacts:
  #   paths:
  #     - bin/*
  #   expire_in: 1 week

docker-build:
  image: docker:stable
  stage: build
  tags:
    - docker
  services:
    - docker:dind
  script:
    - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
    - export BUILDVERSION=${CI_COMMIT_REF_NAME//\//_} # stip / off the branch name and replace by _ to have a valid docker tag format
    - echo "Building docker image with BUILDVERSION=${BUILDVERSION}"
    - ./scripts/docker-build.sh
    - docker push registry.gitlab.com/teserakt/c2ae/api:${BUILDVERSION}
    - docker push registry.gitlab.com/teserakt/c2ae/cli:${BUILDVERSION}
