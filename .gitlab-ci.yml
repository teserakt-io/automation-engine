image: golang:1.12

stages:
  - test
  - build

cache:
  untracked: true
  key: ${CI_COMMIT_REF_SLUG}
  paths:
    - .cache/

after_script:
 cp -R $GOPATH .cache

before_script:
  # Cache only work from project root so we move gopath there to allow caching
  cp -R .cache $GOPATH

  # https://docs.gitlab.com/ee/ci/ssh_keys/
  - 'which ssh-agent || ( apt-get update -y && apt-get install openssh-client -y )'
  - eval $(ssh-agent -s)
  - echo "$SSH_CI_KEY" | tr -d '\r' | ssh-add - > /dev/null
  - mkdir -p ~/.ssh && chmod 600 ~/.ssh
  - echo "gitlab.com,35.231.145.151 ecdsa-sha2-nistp256 AAAAE2VjZHNhLXNoYTItbmlzdHAyNTYAAAAIbmlzdHAyNTYAAABBBFSMqzJeV9rUzU4kWitGjeR4PWSa29SPqJ1fVkhtj3Hw9xjLVXVYrU9QlYWrOLXBpQ6KWjbjTDTdDkoohFzgbEY=" >> ~/.ssh/known_hosts

  # Force use of ssh urls instead of https for gitlab.com. Has to be done before any go get...
  - git config --global url."git@gitlab.com:".insteadOf "https://gitlab.com/"

  # Install global go tools
  - go install golang.org/x/lint/golint
  - go get github.com/jstemmer/go-junit-report

lint:
  stage: test
  script:
    - golint -set_exit_status ./...

test:
  stage: test
  script:
    - go test -v -coverprofile=cover.out -race ./... | tee >(go-junit-report > report.xml)
    - go tool cover -func cover.out
  coverage: '/^total:\t+\(statements\)\t+(\d+\.\d+)%/'
  artifacts:
    reports:
      junit:
        - report.xml
    expire_in: 1 week

build:
  stage: build
  script:
    - ./scripts/build.sh
  # artifacts:
  #   paths:
  #     - bin/*
  #   expire_in: 1 week
